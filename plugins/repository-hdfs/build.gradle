/*
 * Licensed to Elasticsearch under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

//apply plugin: 'nebula.provided-base'
 
esplugin {
  description 'The HDFS repository plugin adds support for Hadoop Distributed File-System (HDFS) repositories.'
  classname 'org.elasticsearch.plugin.hadoop.hdfs.HdfsPlugin'
}

configurations {
    hadoop1
    hadoop2
}

versions << [
  'hadoop1': '1.2.1',
  'hadoop2': '2.7.1'
]

dependencies {
  provided "org.apache.hadoop:hadoop-core:${versions.hadoop1}"
  provided "org.elasticsearch:elasticsearch:${versions.elasticsearch}"
  //testCompile "org.apache.lucene:lucene-test-framework:${versions.lucene}"

  hadoop1("org.apache.hadoop:hadoop-core:${versions.hadoop1}") {
    exclude module: "commons-cli"
    exclude group: "com.sun.jersey"
    exclude group: "org.mortbay.jetty"
    exclude group: "tomcat"
    exclude module: "commons-el"
    exclude module: "hsqldb"
    exclude group: "org.eclipse.jdt"
    exclude module: "commons-beanutils"
    exclude module: "commons-beanutils-core"
    exclude module: "junit"
    // provided by ES itself
    exclude module: "commons-logging"
    exclude module: "commons-codec"
    exclude module: "commons-lang"
    exclude group: "org.slf4j"
    exclude group: "log4j"
  }

  hadoop2("org.apache.hadoop:hadoop-client:${versions.hadoop2}") {
      exclude module: "commons-cli"
      exclude group: "com.sun.jersey"
      exclude group: "com.sun.jersey.contribs"
      exclude group: "com.sun.jersey.jersey-test-framework"
      exclude module: "guice"
      exclude group: "org.mortbay.jetty"
      exclude group: "tomcat"
      exclude module: "commons-el"
      exclude module: "hsqldb"
      exclude group: "org.eclipse.jdt"
      exclude module: "commons-beanutils"
      exclude module: "commons-beanutils-core"
      exclude module: "javax.servlet"
      exclude module: "guava"
      exclude module: "junit"
      // provided by ES itself
      exclude module: "commons-logging"
      exclude module: "commons-codec"
      exclude module: "commons-lang"
      exclude group: "org.slf4j"
      exclude group: "log4j"
  }

  hadoop2("org.apache.hadoop:hadoop-hdfs:${versions.hadoop2}") {
      exclude module: "guava"
      exclude module: "log4j"
      exclude module: "junit"
  }
} 

configurations.all {
    resolutionStrategy {
        force "commons-lang:commons-lang:2.6"
        force "commons-httpclient:commons-httpclient:3.0.1"
        force "org.codehaus.jackson:jackson-core-asl:1.8.8"
        force "org.codehaus.jackson:jackson-mapper-asl:1.8.8"
    }
}


dependencyLicenses {
  mapping from: /hadoop-.*/, to: 'hadoop'
}

compileJava.options.compilerArgs << '-Xlint:-deprecation,-rawtypes'

// main jar includes just the plugin classes
jar {
    include "org/elasticsearch/plugin/hadoop/hdfs/*"
}

// haddop jar (which actually depend on Hadoop)
task hadoopLinkedJar(type: Jar, dependsOn:jar) {
    appendix "internal"
    from sourceSets.main.output.classesDir
    // exclude plugin
    exclude "org/elasticsearch/plugin/hadoop/hdfs/*"
}


// configure 'bundle' as being w/o Hadoop deps
bundlePlugin {
    into ("internal-libs") {
        from hadoopLinkedJar.archivePath
    }
}

task distZipHadoop1(type: Zip, dependsOn: [hadoopLinkedJar, jar]) { zipTask ->
    from bundlePlugin
    description = "Builds archive (with Hadoop1 dependencies) suitable for download page."

    into ("hadoop-libs") {
        from configurations.hadoop1.allArtifacts.files
        from configurations.hadoop1
    }
}

task distZipHadoop2(type: Zip, dependsOn: [hadoopLinkedJar, jar]) { zipTask ->
    from bundlePlugin
    description = "Builds archive (with Hadoop2/YARN dependencies) suitable for download page."
    classifier = "hadoop2"

    into ("hadoop-libs") {
        from configurations.hadoop2.allArtifacts.files
        from configurations.hadoop2
    }
}

artifacts {
    archives bundlePlugin
    'default' bundlePlugin
    archives distZipHadoop1
    archives distZipHadoop2
}

test {
  // this is needed for insecure plugins, remove if possible!
  //systemProperty 'tests.artifact', project.name 
}
